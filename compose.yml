services:
  web:
    build:
      context: ./docker/nginx
    container_name: web_nginx
    restart: always
    networks:
      - my_network
    ports:
      - '8080:80'
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/logs:/var/log/nginx
    depends_on:
      api:
        condition: service_started
      frontend:
        condition: service_started

  api:
    build:
      context: ./backend
    container_name: api_app
    restart: always
    networks:
      - my_network
    ports:
      - '3000:3000'
    volumes:
      - ./backend/.env:/app/backend/.env
      - ./backend/Cargo.toml:/app/Cargo.toml
      - ./backend/Cargo.lock:/app/Cargo.lock
      - ./backend/src:/app/src
    command: |
      cargo run
    develop:
      watch:
        - action: rebuild
          path: ./backend/src
        - action: rebuild
          path: ./backend/Cargo.toml
        - action: rebuild
          path: ./backend/Cargo.lock
    working_dir: /app/backend
    depends_on:
      db:
        condition: service_started

  frontend:
    build:
      context: ./frontend
    container_name: frontend_app
    restart: always
    networks:
      - my_network
    ports:
      - '5173:5173'
    volumes:
      - /app/frontend/node_modules
      - ./frontend/:/app/frontend
    command: |
      npm run dev
    develop:
      watch:
        - action: rebuild
          path: ./frontend/package.json
    working_dir: /app/frontend
    tty: true

  db:
    build:
      context: ./docker/postgres
    container_name: postgres_db
    restart: always
    networks:
      - my_network
    env_file:
      - .env
    environment:
      - POSTGRES_USER:${POSTGRES_USER}
      - POSTGRES_PASSWORD:${POSTGRES_PASSWORD}
      - POSTGRES_DB:${POSTGRES_DB}
    ports:
      - '5432:5432'
    volumes:
      - postgres_data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    networks:
      - my_network
    env_file: 
      - .env
    environment:
      - PGADMIN_DEFAULT_EMAIL:${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD:${PGADMIN_DEFAULT_PASSWORD}
    ports:
      - '5050:80'
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      db:
        condition: service_started

volumes:
  postgres_data:
  pgadmin_data:

networks:
  my_network:
